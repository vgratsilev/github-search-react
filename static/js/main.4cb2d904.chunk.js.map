{"version":3,"sources":["components/UI/Loader/Loader.module.scss","components/Navbar/Navbar.js","context/alert/alertContext.js","context/github/githubContext.js","components/Search/Search.js","components/Card/Card.js","components/UI/Loader/Loader.js","pages/Home.js","components/Repos/Repos.js","pages/Profile.js","pages/About.js","context/types.js","context/alert/alertReducer.js","context/alert/alertState.js","components/Alert/Alert.js","context/github/githubReducer.js","context/github/githubState.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Navbar","className","to","exact","AlertContext","createContext","GithubContext","Search","useState","value","setValue","alert","useContext","github","type","placeholder","onKeyPress","event","key","clearUsers","trim","hide","searchUsers","show","onChange","target","Card","user","src","avatar_url","alt","login","Loader","classes","center","Home","loading","users","map","id","Repos","repos","repo","html_url","name","description","homepage","href","rel","imgStyles","maxWidth","Profile","match","getUser","getRepos","username","useMemo","params","useEffect","company","location","bio","blog","followers","public_repos","public_gists","following","style","minWidth","About","SHOW_ALERT","HIDE_ALERT","CLEAR_USERS","GET_REPOS","GET_USER","SEARCH_USERS","SET_LOADING","handlers","state","action","payload","alertReducer","DEFAULT","AlertState","children","useReducer","dispatch","Provider","text","Alert","role","aria-label","onClick","aria-hidden","GithubReducer","CLIENT_ID","process","REACT_APP_CLIENT_ID","CLIENT_SECRET","REACT_APP_CLIENT_SECRET","withCreds","url","GithubState","a","setLoading","axios","get","response","data","items","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4cb2d904.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__3cxM3\",\"lds-spinner\":\"Loader_lds-spinner__1EmWQ\",\"center\":\"Loader_center__3DNW3\"};","import React from 'react';\nimport {NavLink} from 'react-router-dom';\n\nexport const Navbar = () => (\n    <nav className={'navbar navbar-dark bg-primary navbar-expand-lg'}>\n        <div className={'navbar-brand'}>\n            Github Search\n        </div>\n        <ul className={'navbar-nav'}>\n            <li className={'nav-item'}>\n                <NavLink to={'/'} exact className={'nav-link'}>Main</NavLink>\n            </li>\n            <li className={'nav-item'}>\n                <NavLink to={'/about'} className={'nav-link'}>Information</NavLink>\n            </li>\n        </ul>\n    </nav>\n)\n","import {createContext} from 'react';\n\nexport const AlertContext = createContext();\n","import { createContext } from 'react';\n\nexport const GithubContext = createContext()\n","import React, { useContext, useState } from 'react';\nimport { AlertContext } from '../../context/alert/alertContext';\nimport { GithubContext } from '../../context/github/githubContext';\n\nexport const Search = () => {\n    const [value, setValue] = useState('');\n    const alert = useContext(AlertContext);\n    const github = useContext(GithubContext);\n\n    const onSubmit = (event) => {\n        if (event.key !== 'Enter') {\n           return;\n        }\n\n        github.clearUsers();\n\n        if (value.trim()) {\n            alert.hide();\n            github.searchUsers(value.trim());\n        }\n        else {\n            alert.show('Input username');\n        }\n    };\n    return (\n        <div className={'form-group'}>\n            <input\n                type={'text'}\n                className={'form-control'}\n                placeholder={'Input username'}\n                onKeyPress={onSubmit}\n                value={value}\n\n                onChange={event => setValue(event.target.value)}\n            />\n        </div>\n    )\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport const Card = ({user}) => {\n    return (\n        <div className={'card'}>\n            <img\n                src={user.avatar_url}\n                alt={user.login}\n                className={'card-img-top'}/>\n            <div className={'card-body'}>\n                <h5 className={'class-title'}>{user.login}</h5>\n                <Link\n                    to={`/profile/${user.login}`}\n                    className={'btn btn-primary'}\n                >\n                    See more\n                </Link>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport classes from './Loader.module.scss';\n\n// Used loader from loader.io/css.\n\nconst Loader = () => (\n    <div className={classes.center}>\n        <div className={classes.Loader}>\n            <div/>\n            <div/>\n            <div/>\n            <div/>\n            <div/>\n            <div/>\n            <div/>\n            <div/>\n            <div/>\n            <div/>\n            <div/>\n            <div/>\n        </div>\n    </div>\n)\n\nexport default Loader;\n","import React, { useContext } from 'react';\nimport { Search } from '../components/Search/Search';\nimport { Card } from '../components/Card/Card';\nimport { GithubContext } from '../context/github/githubContext';\nimport Loader from '../components/UI/Loader/Loader';\n\nexport const Home = () => {\n    const {loading, users} = useContext(GithubContext);\n\n    return (\n        <div>\n            <Search/>\n\n            <div className={'row'}>\n\n                {loading\n                    ? <Loader/>\n                    : users.map(user => {\n                        return (\n                            <div key={user.id} className={'col-sm-3 mb-4'}>\n                                <Card user={user}/>\n                            </div>\n                        );\n                    })\n                }\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\n\nexport const Repos = ({repos}) => {\n    return (\n        <div>\n            {repos.map((repo) => {\n                const {\n                    html_url,\n                    name,\n                    description,\n                    homepage\n                } = repo;\n                return (\n                    <div className={'card mb-3'} key={repo.id}>\n                        <div className={'card-body'}>\n                            <h4 className={'card-title'}>\n                                <a\n                                    href={html_url}\n                                    target={'_blank'}\n                                    rel={'noreferrer'}\n                                    className={'card-link'}\n                                >\n                                    {name}\n                                </a>\n                            </h4>\n                            {description &&\n                            <h6 className={'card-subtitle text-muted'}>{description}</h6>\n                            }\n                            {homepage &&\n                            <a\n                                href={homepage}\n                                target={'_blank'}\n                                rel={'noreferrer'}\n                                className={'card-link'}\n                            >\n                                {homepage}\n                            </a>\n                            }\n                        </div>\n                    </div>\n                )\n            })}\n        </div>\n    )\n}\n","import React, { useContext, useEffect, useMemo } from 'react';\nimport { GithubContext } from '../context/github/githubContext';\nimport Loader from '../components/UI/Loader/Loader';\nimport { Link } from 'react-router-dom';\nimport { Repos } from '../components/Repos/Repos';\n\nconst imgStyles = {maxWidth: 200};\n\nexport const Profile = ({match}) => {\n    const {\n        getUser,\n        getRepos,\n        loading,\n        user,\n        repos\n    } = useContext(GithubContext);\n    const username = useMemo(() => match.params.name, [match]);\n\n    useEffect(() => {\n        getUser(username);\n        getRepos(username);\n        // eslint-disable-next-line\n    }, [username]);\n\n    if (loading) {\n        return <Loader/>\n    }\n\n    const {\n        name,\n        company,\n        avatar_url,\n        location,\n        bio,\n        blog,\n        login,\n        html_url,\n        followers,\n        public_repos,\n        public_gists,\n        following\n    } = user;\n\n    return (\n        <div style={{minWidth: '280px'}}>\n            <Link to={'/'} className={'btn btn-link'}>Back</Link>\n\n            <div className={'card mb-4'}>\n                <div className={'card-body'}>\n                    <div className={'row'}>\n                        <div className={'col-sm-5 col-lg-3 text-center'}>\n                            <img style={imgStyles} src={avatar_url} alt={name}/>\n                            <h2 className={'card-title'}>{name}</h2>\n                            <h5 className={'card-subtitle text-muted mb-3'}>{login}</h5>\n                            {location &&\n                            <p>Location: {location}</p>\n                            }\n                        </div>\n                        <div className={'col-sm-7 col-lg-9'}>\n                            {bio &&\n                            <>\n                                <h3>BIO</h3>\n                                <p>{bio}</p>\n                            </>\n                            }\n                            <a\n                                href={html_url}\n                                target={'_blank'}\n                                rel={'noreferrer'}\n                                className={'btn btn-dark'}\n                            >\n                                Open Profile\n                            </a>\n                            <ul>\n                                {company && <li>\n                                    <strong>Company: </strong> {company}\n                                </li>}\n                                {blog && <li>\n                                    <strong>Website: </strong>\n                                    <a\n                                        href={blog}\n                                        target={'_blank'}\n                                        rel={'noreferrer'}\n                                        className={'card-link'}\n                                    >{blog}</a>\n                                </li>}\n                            </ul>\n\n                            <div className={'d-flex flex-column align-items-start'}>\n                                <div className={'badge badge-primary mb-1'}>Followers: {followers}</div>\n                                <div className={'badge badge-primary mb-1'}>Following: {following}</div>\n                                <div className={'badge badge-info mb-1'}>Public repos: {public_repos}</div>\n                                <div className={'badge badge-dark'}>Public gists: {public_gists}</div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <Repos repos={repos} />\n        </div>\n    )\n}\n","import React from 'react';\n\nexport const About = () => {\n\n    return (\n        <div>\n            <div className='jumbotron'>\n                <div className='container'>\n                    <h1 className='display-4'>About</h1>\n                    <p className='lead'>React hooks app</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n","export const SHOW_ALERT = 'SHOW_ALERT';\nexport const HIDE_ALERT = 'HIDE_ALERT';\n\nexport const CLEAR_USERS = 'CLEAR_USERS';\nexport const GET_REPOS = 'GET_REPOS';\nexport const GET_USER = 'GET_USER';\nexport const SEARCH_USERS = 'SEARCH_USERS';\nexport const SET_LOADING = 'SET_LOADING';\n","import { HIDE_ALERT, SHOW_ALERT } from '../types';\n\nconst handlers = {\n    [SHOW_ALERT]: (state, action) => action.payload,\n    [HIDE_ALERT]: (state, action) => null,\n    DEFAULT: state => state\n}\n\nexport const alertReducer = (state, action) => {\n    const handler = handlers[action.type] || handlers.DEFAULT;\n    return handler(state, action);\n}\n","import React, {useReducer} from 'react';\nimport { AlertContext } from './alertContext';\nimport { alertReducer } from './alertReducer';\nimport { HIDE_ALERT, SHOW_ALERT } from '../types';\n\nexport const AlertState = ({children}) => {\n    const [state, dispatch] = useReducer(alertReducer, null);\n\n    const hide = () => dispatch({type: HIDE_ALERT});\n    const show = (text, type= 'secondary') => {\n        dispatch({\n            type: SHOW_ALERT,\n            payload: {type, text}\n        })\n    };\n\n    return(\n        <AlertContext.Provider value={{\n            hide, show, alert: state\n        }}>\n            {children}\n        </AlertContext.Provider>\n    )\n}\n","import React, {useContext} from 'react';\nimport { AlertContext } from '../../context/alert/alertContext';\n\nexport const Alert = () => {\n    const {alert, hide} = useContext(AlertContext);\n\n    if (!alert) {\n        return null\n    }\n\n    return (\n        <div\n            className={`alert alert-${alert.type || 'secondary'} alert-dismissible`}\n             role='alert'\n        >\n            {alert.text}\n            <button type='button' className='close' aria-label='Close' onClick={hide}>\n                <span aria-hidden='true'>&times;</span>\n            </button>\n        </div>\n    )\n}\n","import {\n    CLEAR_USERS,\n    GET_REPOS,\n    GET_USER,\n    SEARCH_USERS,\n    SET_LOADING\n} from '../types';\n\nconst handlers = {\n    [SEARCH_USERS]: (state, action) => ({\n        ...state,\n        users: action.payload,\n        loading: false\n    }),\n    [GET_REPOS]: (state, action) => ({\n        ...state,\n        repos: action.payload,\n        loading: false\n    }),\n    [GET_USER]: (state, action) => ({\n        ...state,\n        user: action.payload,\n        loading: false\n    }),\n    [SET_LOADING]: (state) => ({\n        ...state,\n        loading: true\n    }),\n    [CLEAR_USERS]: (state) => ({\n        ...state,\n        users: []\n    }),\n    DEFAULT: state => state\n}\n\nexport const GithubReducer = (state, action) => {\n    const handler = handlers[action.type] || handlers.DEFAULT;\n    return handler(state, action);\n}\n","import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport { GithubContext } from './githubContext';\nimport { GithubReducer } from './githubReducer';\nimport { CLEAR_USERS, GET_REPOS, GET_USER, SEARCH_USERS, SET_LOADING } from '../types';\n\nconst CLIENT_ID = process.env.REACT_APP_CLIENT_ID;\nconst CLIENT_SECRET = process.env.REACT_APP_CLIENT_SECRET;\n\nconst withCreds = (url) => {\n    return `${url}client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}`\n}\n\nexport const GithubState = ({children}) => {\n    const initialState = {\n        user: {},\n        users: [],\n        loading: false,\n        repos: []\n    };\n    const [state, dispatch] = useReducer(GithubReducer, initialState);\n\n    const searchUsers = async (value) => {\n        setLoading();\n\n        const response = await axios.get(\n            withCreds(`https://api.github.com/search/users?q=${value}&`)\n        );\n\n        dispatch({\n            type: SEARCH_USERS,\n            payload: response.data.items\n        });\n    };\n\n    const getUser = async (name) => {\n        setLoading();\n\n        const response = await axios.get(\n            withCreds(`https://api.github.com/users/${name}?`)\n        );\n\n        dispatch({\n            type: GET_USER,\n            payload: response.data\n        });\n    };\n\n    const getRepos = async (name) => {\n        setLoading();\n\n        const response = await axios.get(\n            withCreds(`https://api.github.com/users/${name}/repos?per_page=5&`)\n        );\n\n        dispatch({\n            type: GET_REPOS,\n            payload: response.data\n        });\n    };\n\n    const clearUsers = async () => {\n        dispatch({\n            type: CLEAR_USERS\n        });\n    };\n\n    const setLoading = () => {\n        dispatch({\n            type: SET_LOADING\n        });\n    };\n\n    const {user, users, loading, repos} = state;\n\n    return (\n        <GithubContext.Provider value={{\n            searchUsers, getUser, getRepos, clearUsers, setLoading,\n            user, users, loading, repos\n        }}>\n            {children}\n        </GithubContext.Provider>\n    );\n}\n","import { Navbar } from './components/Navbar/Navbar';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport { Home } from './pages/Home';\nimport { Profile } from './pages/Profile';\nimport { About } from './pages/About';\nimport { AlertState } from './context/alert/alertState';\nimport { Alert } from './components/Alert/Alert';\nimport { GithubState } from './context/github/githubState';\n\nfunction App() {\n    return (\n        <GithubState>\n            <AlertState>\n                <BrowserRouter>\n                    <Navbar/>\n                    <div className={'container pt-4'}>\n                        <Alert alert={{text: 'alert'}}/>\n                        <Switch>\n                            <Route path={'/'} exact component={Home}/>\n                            <Route path={'/about'} component={About}/>\n                            <Route path={'/profile/:name'} component={Profile}/>\n                            <Redirect to={'/'}/>\n                        </Switch>\n                    </div>\n                </BrowserRouter>\n            </AlertState>\n        </GithubState>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}