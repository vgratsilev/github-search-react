{"version":3,"sources":["components/Navbar/Navbar.js","pages/Home.js","pages/Profile.js","pages/About.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","to","exact","Home","Profile","About","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wMAGaA,EAAS,kBAClB,sBAAKC,UAAW,iDAAhB,UACI,qBAAKA,UAAW,eAAhB,2BAGA,qBAAIA,UAAW,aAAf,UACI,oBAAIA,UAAW,WAAf,SACI,cAAC,IAAD,CAASC,GAAI,IAAKC,OAAK,EAACF,UAAW,WAAnC,oBAEJ,oBAAIA,UAAW,WAAf,SACI,cAAC,IAAD,CAASC,GAAI,SAAUD,UAAW,WAAlC,kC,OCXHG,EAAO,WAEhB,OACI,8BACI,8CCJCC,EAAU,WAEnB,OACI,8BACI,iDCJCC,EAAQ,WAEjB,OACI,8BACI,qBAAKL,UAAU,YAAf,SACI,sBAAKA,UAAU,YAAf,UACI,oBAAIA,UAAU,YAAd,mBACA,mBAAGA,UAAU,OAAb,qCCYLM,MAff,WACI,OACI,eAAC,IAAD,WACI,cAAC,EAAD,IACA,qBAAKN,UAAW,iBAAhB,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOO,KAAM,IAAKL,OAAK,EAACM,UAAWL,IACnC,cAAC,IAAD,CAAOI,KAAM,SAAUC,UAAWH,IAClC,cAAC,IAAD,CAAOE,KAAM,iBAAkBC,UAAWJ,aCF/CK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.83068ea0.chunk.js","sourcesContent":["import React from 'react';\nimport {NavLink} from 'react-router-dom';\n\nexport const Navbar = () => (\n    <nav className={'navbar navbar-dark bg-primary navbar-expand-lg'}>\n        <div className={'navbar-brand'}>\n            Github Search\n        </div>\n        <ul className={'navbar-nav'}>\n            <li className={'nav-item'}>\n                <NavLink to={'/'} exact className={'nav-link'}>Main</NavLink>\n            </li>\n            <li className={'nav-item'}>\n                <NavLink to={'/about'} className={'nav-link'}>Information</NavLink>\n            </li>\n        </ul>\n    </nav>\n)\n","import React from 'react';\n\nexport const Home = () => {\n\n    return (\n        <div>\n            <h1>Home page</h1>\n        </div>\n    )\n}\n","import React from 'react';\n\nexport const Profile = () => {\n\n    return (\n        <div>\n            <h1>Profile page</h1>\n        </div>\n    )\n}\n","import React from 'react';\n\nexport const About = () => {\n\n    return (\n        <div>\n            <div className='jumbotron'>\n                <div className='container'>\n                    <h1 className='display-4'>About</h1>\n                    <p className='lead'>React hooks app</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import { Navbar } from './components/Navbar/Navbar';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\nimport { Home } from './pages/Home';\nimport { Profile } from './pages/Profile';\nimport { About } from './pages/About';\n\nfunction App() {\n    return (\n        <BrowserRouter>\n            <Navbar />\n            <div className={'container pt-4'}>\n                <Switch>\n                    <Route path={'/'} exact component={Home} />\n                    <Route path={'/about'} component={About} />\n                    <Route path={'/profile/:name'} component={Profile} />\n                </Switch>\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}